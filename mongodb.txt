Crete database and cluster in mongodb to get the url.
Index.js
const mongoose = require("mongoose");
const express = require("express");
const User = require('./models/user')
const app = express()
app.use(express.json())
// GET endpoint to fetch all users
app.get("/", async (req, res) => {
const users = await User.find();
return res.json(users);
})
app.post("/", async (req, res) => {
const body = req.body;
// Basic validation
if (!Array.isArray(body) || body.length === 0) {
return res.status(400).json({ error: "Invalid input: Please provide an
array of users." });
}
try {
const createdUsers = await Promise.all(body.map(async (user) => {
const newUser = new User(user);
return await newUser.save();
}));
// Use res.json instead of req.json
return res.json(createdUsers);
} catch (error) {
return res.status(500).json({ error: error.message });
}
});

const uri =
'mongodb+srv://pragati:dbPassword@cluster.nua50.mongodb.net/myDatabase?retryWr
ites=true&w=majority';
mongoose.connect(uri, {
useNewUrlParser: true,
useUnifiedTopology: true,
ssl: true // Keep this if needed
})
.then(() => {
console.log("Connected to MongoDB");
app.listen(8081, () => {
console.log("Server is running on port 8081");
});
})
.catch((error) => {
console.error("MongoDB connection error:", error);
});

User.js
const mongoose = require("mongoose");
const userSchema = new mongoose.Schema({
firstName: String,
lastName: String,
dateOfBirth: {
type: Date,
required: false,
});
},
address: String,
const User = mongoose.model('user', userSchema)
module.exports =User
Package.json
{
"name": "practical-8",
"version": "1.0.0",
"main": "index.js",
"scripts": {
"start": "node index.js"
},
"keywords": [],
"author": "",
"license": "ISC",
"description": "",
"dependencies": {
"express": "^4.21.0",
"mongoose": "^8.7.0"
}
}


testMongoConnection.js
const mongoose = require('mongoose');
const uri =
'mongodb+srv://pragati:dbPassword@cluster.nua50.mongodb.net/myDatabase?retryWr
ites=true&w=majority';
mongoose.connect(uri, {
useNewUrlParser: true,
useUnifiedTopology: true,
ssl: true
})
.then(() => {
console.log("Connected to MongoDB");
mongoose.disconnect(); // Disconnect immediately after testing
})
.catch((error) => {
console.error("MongoDB connection error:", error);
});

Ensure that your IP address is whitelisted in the MongoDB Atlas dashboard under Network Access.
You can allow access from anywhere by adding 0.0.0.0/0

Open postman -> select POST -> paste server url -> in body choose JSON and add data

{
"firstname": "alice",
"lastname":"bob",
"dateOfBirth":"1988-02-15"
}

